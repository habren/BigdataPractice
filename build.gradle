subprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
//    apply plugin: 'nebula.provided-base'

    group = 'com.jasongj.bigdata'
    version = '1.0'

    description = """"""

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    ext {
        hiveVersion = '1.2.1'
        hadoopVersion = '2.7.3'
        sparkVersion = '2.3.1'
        parquetVersion = '1.7.0'
        avroVersion = '1.7.7'
        kafkaVersion = '0.10.1.1'
        log4j2Version = '2.7'
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

//plugins {
//    id 'nebula.provided-base' version '3.0.3' // if you want provided-base
//}

    buildscript {
        repositories { jcenter() }
        dependencies {
            classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
        }
    }

    configurations {

        all*.exclude group: 'ch.qos.logback'
        all*.exclude module: 'slf4j-log4j12'
        all*.exclude group: 'org.pentaho'
        all*.exclude module: 'apache-curator'
        all*.exclude group: 'org.eclipse.jetty.aggregate'
        all*.exclude group: 'org.eclipse.jetty.orbit'
    }


    jar {
        manifest {
            attributes "Main-Class" : "com.jasongj.spark.driver.SparkBucketJoin"
        }

        baseName = project.name + '-with-dependencies'
        zip64 = true
        from {
            /*(configurations.compile - configurations.provided).collect {
                it.isDirectory() ? it : zipTree(it)
            }*/
//            (configurations.compile - configurations.provided).collect {
//                it.isDirectory() ? it : zipTree(it)
//            }
        } {
            exclude "META-INF/*"
            exclude "META-INF/services/*"
            exclude "META-INF/maven/*"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
        }
    }


//task listJars(description: 'Display all compile jars.') {
////    doLast{
////        (configurations.compile - configurations.sparkProvided).each { File file -> println file.name }
////    }
////}

    task createWrapper(type: Wrapper) {
        gradleVersion = '4.9'
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '4.9'
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }

        }
    }

    dependencies {

        compile(
                [group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.6.5'],
                [group: 'org.slf4j', name: 'slf4j-api', version:'1.7.22'],
                [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2Version],
                [group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2Version],
                [group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2Version],
                [group: 'com.google.guava', name: 'guava', version: '16.0.1'],
                [group: 'org.projectlombok', name: 'lombok', version:'1.16.12'],
                [group: 'commons-cli', name: 'commons-cli', version: '1.3.1']
        )
    }
}